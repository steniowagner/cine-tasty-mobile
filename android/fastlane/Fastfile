platform :android do
  gradle_file_path = "./app/build.gradle"

  desc '[Android] Building the STAGING release APK.'
  private_lane :build_staging do
    increment_version_code(gradle_file_path: gradle_file_path,)
    increment_version_name(gradle_file_path: gradle_file_path, bump_type: 'patch')
    gradle(task: 'clean', project_dir: './')
    gradle(task: 'assemble', build_type: 'Release', project_dir: './')
    supply(track: 'beta', apk: ENV["RELEASE_FILE_PATH"])
  end

  desc '[Android] Building the PRODUCTION release AAB.'
  private_lane :build_production do
    increment_version_code(gradle_file_path: "../app/build.gradle",)
    increment_version_name(app_project_dir: '../app', bump_type: 'patch')
    gradle(task: 'clean', project_dir: './')
    gradle(task: 'bundle', build_type: 'Release', project_dir: '../')
    supply(track: 'production', aab: ENV["RELEASE_FILE_PATH"], release_status: 'draft')
  end

  desc '[Android] Uploading the release AAB to App Center.'
  private_lane :upload do |options|
    appcenter_upload(
      file: ENV["RELEASE_FILE_PATH"],
      app_name: ENV["APP_CENTER_APP_NAME"],
      owner_name: ENV["APPCENTER_OWNER_NAME"],
      api_token: ENV["APPCENTER_API_TOKEN"],
      destinations: ENV["DESTINATIONS"],
      app_platform: 'React Native',
      notify_testers: true,
      app_os: 'Android',
    )
  end

  version_code = number_of_commits(all: false).to_i

  desc '[Android] Add badge to the STAGING app.'
  private_lane :make_badge do
    add_badge(
      shield: "DEV-#{version_code}-orange",
      no_badge: true,
      dark: true,
      shield_scale: "0.75",
      shield_geometry: "+0+25%",
      shield_gravity: "Center",
      glob: "./android/app/src/main/res/mipmap-*/{ic_launcher,ic_launcher_round,ic_foreground}.{png,PNG}"
    )
  end

  desc 'Building & Deploying STAGING Android.'
  lane :deploy_staging do
    make_badge
    build_staging
    upload
  end

  desc 'Building & Deploying PRODUCTION Android.'
  lane :deploy_production do
    build_production
    upload
  end
end
